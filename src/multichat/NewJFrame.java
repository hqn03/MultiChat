/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package multichat;

import java.io.IOException;
import java.net.UnknownHostException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Objects;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.management.modelmbean.ModelMBean;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;

/**
 *
 * @author Nhat
 */
public class NewJFrame extends javax.swing.JFrame {
    private DefaultTableModel model;
    private sqlite db;
    private String address;
    private int port;
    private String name;
    
    /**
     * Creates new form NewJFrame
     */
    public NewJFrame(String name) {
        initComponents();
        
        db = new sqlite();
        txtName.setText(name);
        
        Runnable helloRunnable = new Runnable() { public void run() {
        loadData();
    }};
        ScheduledExecutorService executor = Executors.newScheduledThreadPool(1);
        executor.scheduleAtFixedRate(helloRunnable, 0, 3, TimeUnit.SECONDS);
                
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtPort = new javax.swing.JTextField();
        jButtonJoin = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jLabel5.setText("Name");
        jPanel1.add(jLabel5);

        txtName.setPreferredSize(new java.awt.Dimension(100, 22));
        jPanel1.add(txtName);

        jLabel1.setText("Address");
        jPanel1.add(jLabel1);

        txtAddress.setPreferredSize(new java.awt.Dimension(100, 22));
        jPanel1.add(txtAddress);

        jLabel2.setText("Port");
        jPanel1.add(jLabel2);

        txtPort.setPreferredSize(new java.awt.Dimension(100, 22));
        jPanel1.add(txtPort);

        jButtonJoin.setText("Join");
        jButtonJoin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonJoinActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonJoin);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadData(){
        model = new DefaultTableModel();
        model.addColumn("STT");
        model.addColumn("Address");
        model.addColumn("Port");
        model.addColumn("Users");
        jTable1.setModel(model);
        sqlite db = new sqlite();
        for(RoomChat x : db.selectAll())
            model.addRow(new Object[]{x.getId(),x.getAddress(),x.getPort(),x.getUsers()});
    }
    
    //tạo room
    private void insertRoom(String address, int port,String users){
        sqlite db = new sqlite();
        db.insert(address, port,users);
    }
    
    //kiểm tra room trùng lặp
    private boolean roomIsExists(String address, int port){
        for(int i=0; i< model.getRowCount();i++)
            if(model.getValueAt(i, 1).equals(address)&&model.getValueAt(i, 2).equals(port))
                return true;
        return false;
    }
    
//    private String getCurrentUsers(String address, int port){
//        for(int i=0; i< model.getRowCount();i++)
//            if(model.getValueAt(i, 1).equals(address)&&model.getValueAt(i, 2).equals(port))
//                return model.getValueAt(i, 3).toString();
//        return null;
//    }

    //cập nhật username
    private void updateUsers(String address, int port,String users) throws SQLException{
        sqlite db = new sqlite();
        db.updateUsers(address, port, users);
    }
    
    //kiểm tra username trùng lặp
    private boolean isUserExists(String address, int port,String name) throws SQLException{
        String users = db.getUsers(address,port);
        String[] arrUsers = users.split(",");
        for (String user : arrUsers) {
            if (user.equals(name)) {
                return true;
            }
        }
        return false;
    }
    
    private void moveToChat() throws IOException{
        Client client = new Client(address,port,name);
        client.show();
                
        //đóng frame
        dispose();
    }
    
    private void jButtonJoinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonJoinActionPerformed
// TODO add your handling code here:
        address = txtAddress.getText();
        port = Integer.parseInt(txtPort.getText());
        name = txtName.getText();
        if(name.isBlank())
        {
            JOptionPane.showMessageDialog(rootPane, "Nhap ten");
        }else{
            if(roomIsExists(address, port)) {
                try {
                    if(isUserExists(address, port, name)){
                        JOptionPane.showMessageDialog(rootPane, "Ten nguoi dung da ton tai");
                    }
                    else{
                    String currentUsers = db.getUsers(address, port);
                    updateUsers(address, port, currentUsers+name+",");
                    moveToChat();
                    }
                } catch (SQLException | IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else{
                insertRoom(address, port,name+", ");
                try {
                    moveToChat();
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            } 
        }
    }//GEN-LAST:event_jButtonJoinActionPerformed

    
    //Click vào table -> điền address ,port
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int index = jTable1.getSelectedRow();
        String address = model.getValueAt(index, 1).toString();
        String port = model.getValueAt(index, 2).toString();
        txtAddress.setText(address);
        txtPort.setText(port);        
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonJoin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPort;
    // End of variables declaration//GEN-END:variables
}
